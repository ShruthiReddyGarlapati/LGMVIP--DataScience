# -*- coding: utf-8 -*-
"""lgmtask1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L8KQuRDCMgTOhDtBNeQ4jdzzDt-iVGBu
"""

import pandas as pd
import numpy as np
from matplotlib import pyplot as plt

iris=pd.read_csv('iris.csv')
iris.head()

iris.columns

iris.shape

iris['species'].unique()

iris.replace('Iris-setosa',0,inplace=True)
iris.replace('Iris-virginica',1,inplace=True)
iris.replace('Iris-versicolor',2,inplace=True)

iris['species'].unique()

iris.isna().sum()

X=iris.drop('species',axis=1)
X.head()

Y=iris['species']
Y

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, Y, test_size=0.2)

len(X_train)

len(X_test)

from sklearn import tree
model = tree.DecisionTreeClassifier()

model.fit(X_train,y_train)

model.score(X_test,y_test)

actual=y_test
predict=model.predict(X_test)

from sklearn.metrics import confusion_matrix

confusion_matrix(actual,predict)

from sklearn.metrics import classification_report
print(classification_report(actual,predict))

print("enter details")
sepal_length=float(input("sepal_length : "))
sepal_width=float(input("sepal_width : "))
petal_length=float(input("petal_length : "))
petal_width=float(input("petal_width : "))
new_data=np.array([[sepal_length,sepal_width,petal_length,petal_width]])

ans=model.predict(new_data)
if(ans==0):
    print("Iris_setosa")
elif(ans==1):
    print("Iris virginica")
else:
    print("Iris versicolor")

